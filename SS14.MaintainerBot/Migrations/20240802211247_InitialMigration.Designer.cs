// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SS14.MaintainerBot.Core.Models;

#nullable disable

namespace SS14.MaintainerBot.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240802211247_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.PullRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("GhRepoId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstallationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId", "GhRepoId", "Number");

                    b.ToTable("PullRequest");
                });

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.PullRequestComment", b =>
                {
                    b.Property<Guid>("PullRequestId")
                        .HasColumnType("uuid");

                    b.Property<long>("CommentId")
                        .HasColumnType("bigint");

                    b.Property<int>("CommentType")
                        .HasColumnType("integer");

                    b.HasKey("PullRequestId", "CommentId");

                    b.ToTable("PullRequestComment");
                });

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.Reviewer", b =>
                {
                    b.Property<Guid>("PullRequestId")
                        .HasColumnType("uuid");

                    b.Property<long>("GhUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("PullRequestId", "GhUserId");

                    b.ToTable("Reviewer");
                });

            modelBuilder.Entity("SS14.MaintainerBot.Models.Entities.MergeProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("MergeDelay")
                        .HasColumnType("interval");

                    b.Property<Guid>("PullRequestId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PullRequestId")
                        .IsUnique();

                    b.ToTable("MergeProcesses");
                });

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.PullRequestComment", b =>
                {
                    b.HasOne("SS14.MaintainerBot.Github.Entities.PullRequest", null)
                        .WithMany("Comments")
                        .HasForeignKey("PullRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.Reviewer", b =>
                {
                    b.HasOne("SS14.MaintainerBot.Github.Entities.PullRequest", null)
                        .WithMany("Reviewers")
                        .HasForeignKey("PullRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SS14.MaintainerBot.Models.Entities.MergeProcess", b =>
                {
                    b.HasOne("SS14.MaintainerBot.Github.Entities.PullRequest", "PullRequest")
                        .WithOne()
                        .HasForeignKey("SS14.MaintainerBot.Models.Entities.MergeProcess", "PullRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PullRequest");
                });

            modelBuilder.Entity("SS14.MaintainerBot.Github.Entities.PullRequest", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reviewers");
                });
#pragma warning restore 612, 618
        }
    }
}
